/* Sticky elems ONLY stick to their containing parent, and will disappear once their parent ends. 
  SO for a navbar, the parent should either be <body> or a <div> containing all content (likely one that stretches across the entire viewport) */
.header {
  color: #000 !important;
  background-color: #00E000;
  position: sticky;
  top: 0; /* 'position: sticky', 'top: 0', and 'z-index: 1020' form to make Bootstrap's "sticky-top" class */
  z-index: 1020;
}

.brand {
  color: white !important;
  background-color: #000;
  font-weight: bold;
  border: 2px solid #000;
  border-radius: 0.25rem;
  padding: 0 1rem;
}
.brand:hover {
  color: lime !important;
}

@media only screen and (min-width: 768px) and (max-width: 991px) {
  .brand { /* Adds extra space between brand + navLinks in tablets */
    margin-right: 0 !important;
  }
}

@media only screen and (max-width: 767px) {
  .nav-collapse {
    order: 2;
  }
  .nav-container {
    display: flex;
    flex-direction: column;
  }
  .navItem {
    margin-left: 1rem !important;
    margin-right: 1rem !important;
  }
}

@media only screen and (max-width: 575px) {
  .nav-container {
    margin-top: 1rem;
  }
  .brand { /* Must mark important or else Bootstrap overrides these values */
    margin-right: -0.25rem !important;
    padding-left: 0.35rem !important;
    padding-right: 0.35rem !important;
  }
}

.navItem {
  height: 40px;
  margin: 0.25rem;
}

.navItem:hover, .navItem:active {
  border-width: 2px !important;
  border-color: white !important;
  color: black !important;
}

.navItem > .navButton {
  color: #000 !important;
  font-weight: 550;
  white-space: normal;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center; /* horizontal text align */
  align-items: center; /* Vertical text align */
  padding-left: 1rem !important; /* Adding '!important' ensures this padding is applied to provide just enough extra space to not look cramped  */
  padding-right: 1rem !important;
  border-radius: 0.15rem !important; /* Change BS 5 links' default border + prevent odd gap when links in button */
}

.navItem > .navButton:hover {
  color: black !important; /* Keeps consistent styling allowing parent navItem to handle hover */
  text-decoration: none;
}

.navItem > .activeNavButton {
  background-color: black !important;
  color: white !important;
}

.navItem > .activeNavButton:hover {
  color: lime !important;
}
